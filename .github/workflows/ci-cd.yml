name: Build, Push, and Deploy to Azure App Service

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

env:
  # Use lower case for image name
  IMAGE_NAME: health-calculator-service
  AZURE_APP_SERVICE_NAME: 'health-calculator-app' # Replace with your Azure App Service name

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Use a more recent version

      - name: Set up Python
        uses: actions/setup-python@v4 # Use a more recent version
        with:
          python-version: '3.13' # Ensure this matches your needs

      - name: Install dependencies (for tests)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m unittest discover -s . -p "test*.py"

      # Login to Azure Container Registry
      - name: Docker Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Build and push Docker image to ACR
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} # Tag with commit SHA
          # Also tag as latest for convenience (optional)
          # tags: |
          #   ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          #   ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

      # Deploy to Azure Web App for Containers
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_APP_SERVICE_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          # Specify the IMAGE to deploy, using the commit SHA tag
          images: '${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'

      # Optional: Logout from ACR
      - name: Docker Logout
        if: always() # Run this even if previous steps fail
        run: docker logout ${{ secrets.ACR_LOGIN_SERVER }}